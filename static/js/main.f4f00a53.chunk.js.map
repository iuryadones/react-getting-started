{"version":3,"sources":["components/Card.js","apps/App1.js","apps/App2.js","apps/App3.js","apps/App4.js","apps/App5.js","apps/App6.js","apps/App7.js","App.js","serviceWorker.js","index.js","github.svg"],"names":["Card","state","showMenu","app","bind","closeMenu","selectApp","event","preventDefault","this","setState","document","addEventListener","dropdownMenu","contains","target","removeEventListener","_id","id","component","props","apps","cmp","onClick","ref","element","map","index","key","name","React","Component","Name","user","firstName","lastName","NameDict","getGreenting","Object","keys","length","formatName","NameConditional","case_one","case_two","Time","timer","time","Date","setTimeout","componentDidMount","Math","floor","now","clearTimeout","toLocaleTimeString","ItIsTime","Welcome","WelcomeName","WelcomeListName","Comment","className","style","float","width","textAlign","src","author","avatarUrl","alt","text","date","toLocaleDateString","UserComment","comment","App","href","logoGithub","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"2QAiFeA,E,YA7Eb,aAAe,IAAD,8BACZ,+CAEKC,MAAQ,CACXC,UAAU,EACVC,IAAK,gDAGP,EAAKD,SAAW,EAAKA,SAASE,KAAd,gBAChB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBACjB,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBAVL,E,sEAaLG,GAAQ,IAAD,OACdA,EAAMC,iBAENC,KAAKC,SAAS,CAAER,UAAU,IAAQ,WAChCS,SAASC,iBAAiB,QAAS,EAAKP,gB,gCAIlCE,GAAQ,IAAD,OAEVE,KAAKI,aAAaC,SAASP,EAAMQ,SAEpCN,KAAKC,SAAS,CAAER,UAAU,IAAS,WACjCS,SAASK,oBAAoB,QAAS,EAAKX,gB,gCAMvCE,GACR,IAAMU,EAAMV,EAAMQ,OAAOG,GACnBC,EAAYV,KAAKW,MAAMC,KAAKJ,GAAKK,IACvCb,KAAKC,SAAS,CAAEP,IAAKgB,M,+BAGb,IAAD,OACP,OACE,6BACE,4BAAQI,QAASd,KAAKP,UAAtB,QAKEO,KAAKR,MAAMC,SAEP,yBACEsB,IAAK,SAACC,GACJ,EAAKZ,aAAeY,IAGrBhB,KAAKW,MAAMC,KAAKK,KACf,SAACvB,EAAKwB,GAAN,OACI,4BACEC,IAAKD,EACLT,GAAIS,EACJJ,QAAS,EAAKjB,WACbH,EAAI0B,UAOf,KAGN,6BACCpB,KAAKR,MAAME,S,GAvED2B,IAAMC,WCMVC,MANf,WAGE,OADiB,4BADJ,gBCGf,IAJoBC,EASdR,EACJ,uCAVkBQ,EAIP,CACXC,UAAW,OACXC,SAAU,WALED,UAAY,IAAMD,EAAKE,SASnC,KASaC,MAJf,WACE,OAAOX,GCZT,SAASY,EAAaJ,GACpB,OAAIK,OAAOC,KAAKN,GAAMO,OACb,mCANX,SAAoBP,GAClB,OAAOA,EAAKC,UAAY,IAAMD,EAAKE,SAKjBM,CAAWR,GAApB,KAEF,6CAuBMS,MAnBf,WACE,IACMC,EAAWN,EADA,IAGXO,EAAWP,EADJ,CAAC,UAAa,OAAQ,SAAY,WAE/C,OACE,6BACE,6BACGM,EACD,mEAEF,6BACGC,EACD,iFCzBFC,E,YACJ,WAAYzB,GAAO,IAAD,8BAChB,4CAAMA,KACD0B,MAAQ,EACb,EAAK7C,MAAQ,CACX8C,KAAM,IAAIC,MAJI,E,iFAQE,IAAD,OAEjBvC,KAAKqC,MAAQG,YAAW,WACtB,EAAKvC,SAAS,CACZqC,KAAM,IAAIC,OAEZ,EAAKE,sBAEyB,IAAhCC,KAAKC,MAAMJ,KAAKK,MAAQ,KAAe,IAAOL,KAAKK,S,6CAKnDC,aAAa7C,KAAKqC,S,+BAKlB,OAAOrC,KAAKR,MAAM8C,KAAKQ,yB,GA3BRzB,IAAMC,WAyCVyB,MATf,WACE,OACE,6BACE,qCAAU,kBAAC,EAAD,OACV,qECpCN,SAASC,EAAQrC,GACf,OAAO,mDAAyBA,EAAMS,KAA/B,MAQM6B,MALf,WAEE,OADgB,kBAACD,EAAD,CAAS5B,KAAK,iBCLhC,SAAS4B,EAAQrC,GACf,OAAO,mDAAyBA,EAAMS,KAA/B,MAiBM8B,MAdf,WAEE,OACE,6BAFY,CAAC,cAAe,aAAc,UAIhCjC,KACJ,SAACG,EAAMF,GAAP,OACC,kBAAC,EAAD,CAASC,IAAKD,EAAOE,KAAMA,SCPtC,SAAS+B,EAAQxC,GACf,OACE,yBAAKyC,UAAU,WACb,yBAAKA,UAAU,WAAWC,MAAO,CAACC,MAAO,OAAQC,MAAO,MAAOC,UAAW,WACxE,yBAAKJ,UAAU,SACbK,IAAK9C,EAAM+C,OAAOC,UAClBC,IAAKjD,EAAM+C,OAAOtC,OAEpB,yBAAKgC,UAAU,iBACZzC,EAAM+C,OAAOtC,OAGlB,yBAAKiC,MAAO,CAACC,MAAO,OAAQC,MAAO,MAAOC,UAAU,SAClD,yBAAKJ,UAAU,gBACZzC,EAAMkD,MAET,yBAAKT,UAAU,gBACDzC,EAAMmD,KApBdC,wBAgDCC,MArBf,WACE,IAAMC,EAAU,CACdH,KAAM,IAAIvB,KACVsB,KAAM,sCACNH,OAAQ,CACN,UAAa,kCACb,KAAQ,gBAIZ,OACE,6BACE,kBAACP,EAAD,CACEO,OAAQO,EAAQP,OAChBG,KAAMI,EAAQJ,KACdC,KAAMG,EAAQH,SCJPI,MA9Bf,WACE,IAAMtD,EAAO,CACX,CAACQ,KAAM,eAAgBP,IAAK,kBAAC,EAAD,OAC5B,CAACO,KAAM,mBAAoBP,IAAK,kBAAC,EAAD,OAChC,CAACO,KAAM,0BAA2BP,IAAK,kBAAC,EAAD,OACvC,CAACO,KAAM,mBAAoBP,IAAK,kBAAC,EAAD,OAChC,CAACO,KAAM,sBAAuBP,IAAK,kBAAC,EAAD,OACnC,CAACO,KAAM,0BAA2BP,IAAK,kBAAC,EAAD,OACvC,CAACO,KAAM,sBAAuBP,IAAK,kBAAC,EAAD,QAGrC,OACE,6BACE,yBACEwC,MAAO,CAACE,MAAO,MACPD,MAAO,OACPE,UAAW,WACnB,uBAAGW,KAAK,wDACN,yBAAKV,IAAKW,IAAYR,IAAI,SAASL,MAAM,UAG7C,yBAAKF,MAAO,CAACE,MAAO,MACPD,MAAO,UAClB,kBAAC,EAAD,CAAM1C,KAAMA,OCvBdyD,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB5F,QACfsF,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MCzFjEC,IAASC,OACN,kBAAC,EAAD,MACA7F,SAAS8F,eAAe,SDapB,SAAkBnB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAImB,IAAIC,yBAAwB3B,OAAOC,SAASL,MACpDgC,SAAW5B,OAAOC,SAAS2B,OAIvC,OAGF5B,OAAOpE,iBAAiB,QAAQ,WAC9B,IAAMyE,EAAK,UAAMsB,yBAAN,sBAEP7B,IAgEV,SAAiCO,EAAOC,GAEtCuB,MAAMxB,EAAO,CACXyB,QAAS,CAAE,iBAAkB,YAE5BpB,MAAK,SAAAqB,GAEJ,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBAEnB,MAApBF,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C5B,UAAUC,cAAc4B,MAAM1B,MAAK,SAAAC,GACjCA,EAAa0B,aAAa3B,MAAK,WAC7BV,OAAOC,SAASqC,eAKpBlC,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEAvFAqB,CAAwBlC,EAAOC,GAI/BC,UAAUC,cAAc4B,MAAM1B,MAAK,WACjCO,QAAQC,IACN,iHAMJd,EAAgBC,EAAOC,OCnC/BE,I,kBCfAgC,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.f4f00a53.chunk.js","sourcesContent":["import React from 'react'\n\n\nclass Card extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      showMenu: false,\n      app: <div>Wait Click App</div>\n    };\n\n    this.showMenu = this.showMenu.bind(this);\n    this.closeMenu = this.closeMenu.bind(this);\n    this.selectApp = this.selectApp.bind(this);\n  }\n\n  showMenu(event) {\n    event.preventDefault();\n\n    this.setState({ showMenu: true }, () => {\n      document.addEventListener('click', this.closeMenu);\n    });\n  }\n\n  closeMenu(event) {\n\n    if (!this.dropdownMenu.contains(event.target)) {\n\n      this.setState({ showMenu: false }, () => {\n        document.removeEventListener('click', this.closeMenu);\n      });\n\n    }\n  }\n\n  selectApp(event) {\n    const _id = event.target.id\n    const component = this.props.apps[_id].cmp\n    this.setState({ app: component})\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.showMenu}>\n          Apps\n        </button>\n\n        {\n          this.state.showMenu\n            ? (\n              <div\n                ref={(element) => {\n                  this.dropdownMenu = element;\n                }}\n              >\n                {this.props.apps.map(\n                  (app, index) => (\n                      <button\n                        key={index}\n                        id={index}\n                        onClick={this.selectApp}>\n                        {app.name}\n                      </button>\n                  )\n                )}\n              </div>\n            )\n            : (\n              null\n            )\n        }\n        <hr />\n        {this.state.app}\n      </div>\n    );\n  }\n}\n\n\nexport default Card\n","import React from 'react'\n\n\nfunction Name() {\n  const name = 'Iury Adones'\n  const element = (<h1>{name}</h1>)\n  return element\n}\n\nexport default Name\n","import React from 'react'\n\n\nfunction formatName(user) {\n  return user.firstName + ' ' + user.lastName;\n}\n\nconst user = {\n  firstName: 'Iury',\n  lastName: 'Adones'\n};\n\nconst element = (\n  <h1>\n    Hello, {formatName(user)}!\n  </h1>\n);\n\nfunction NameDict () {\n  return element\n}\n\nexport default NameDict\n","import React from 'react'\n\n\nfunction formatName(user) {\n  return user.firstName + ' ' + user.lastName\n}\n\nfunction getGreenting(user) {\n  if (Object.keys(user).length) {\n    return <h1>Hi, {formatName(user)}!</h1>\n  }\n  return <h1>Hi, Stranger.</h1>\n}\n\n\nfunction NameConditional() {\n  const userNull = {}\n  const case_one = getGreenting(userNull)\n  const user = {'firstName': 'Iury', 'lastName': 'Adones'}\n  const case_two = getGreenting(user)\n  return (\n    <div>\n      <div>\n        {case_one}\n        <p>Case user null -> response Stranger</p>\n      </div>\n      <div>\n        {case_two}\n        <p>Case user with user.firstName and user.lastName</p>\n      </div>\n    </div>\n  )\n}\n\nexport default NameConditional\n","import React from 'react'\n\n\nclass Time extends React.Component {\n  constructor(props){\n    super(props);\n    this.timer = 0;\n    this.state = {\n      time: new Date()\n    }\n  }\n\n  componentDidMount(){\n  // set up timer\n    this.timer = setTimeout(() => {\n      this.setState({\n        time: new Date()\n      })\n      this.componentDidMount()\n    },\n    Math.floor(Date.now() / 1000) * 1000 + 1000 - Date.now())\n  }\n\n  componentWillUnmount(){\n  // remove timer\n    clearTimeout(this.timer)\n  }\n\n  render() {\n    // render the current time\n    return this.state.time.toLocaleTimeString()\n  }\n}\n\n\nfunction ItIsTime() {\n  return (\n    <div>\n      <h2>It is <Time /></h2>\n      <p>Hi, Time is class of React.Component</p>\n    </div>\n  )\n}\n\nexport default ItIsTime\n","import React from 'react'\n\n\nfunction Welcome(props) {\n  return <h1>Welcome! My name is {props.name}. </h1>\n}\n\nfunction WelcomeName() {\n  const element = <Welcome name=\"Iury Adones\" />\n  return element\n}\n\nexport default WelcomeName\n","import React from 'react'\n\n\nfunction Welcome(props) {\n  return <h1>Welcome! My name is {props.name}. </h1>\n}\n\nfunction WelcomeListName() {\n  const names = [\"Iury Adones\", \"Pernambuco\", \"Recife\"]\n  return (\n    <div>\n      {\n        names.map(\n          (name, index) =>\n          (<Welcome key={index} name={name} />)\n        )\n      }\n    </div>\n  );\n}\n\nexport default WelcomeListName\n","import React from 'react'\n\n\nfunction formatDate(date) {\n  return date.toLocaleDateString()\n}\n\nfunction Comment(props) {\n  return (\n    <div className=\"Comment\">\n      <div className=\"UserInfo\" style={{float: 'left', width: '20%', textAlign: 'center'}}>\n        <img className=\"Avatar\"\n          src={props.author.avatarUrl}\n          alt={props.author.name}\n        />\n        <div className=\"UserInfo-name\">\n          {props.author.name}\n        </div>\n      </div>\n      <div style={{float: 'left', width: '80%', textAlign:'left' }}>\n        <div className=\"Comment-text\">\n          {props.text}\n        </div>\n        <div className=\"Comment-date\">\n          {formatDate(props.date)}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction UserComment() {\n  const comment = {\n    date: new Date(),\n    text: 'Hello World, Build Apps with React!',\n    author: {\n      'avatarUrl': 'https://placekitten.com/g/64/64',\n      'name': 'Iury Adones',\n    },\n  }\n\n  return (\n    <div>\n      <Comment\n        author={comment.author}\n        text={comment.text}\n        date={comment.date}\n      />\n    </div>\n  )\n}\n\nexport default UserComment\n","import React from 'react'\nimport logoGithub from './github.svg'\nimport Card from './components/Card'\nimport Name from './apps/App1'\nimport NameDict from './apps/App2'\nimport NameConditional from './apps/App3'\nimport ItIsTime from './apps/App4'\nimport WelcomeName from './apps/App5'\nimport WelcomeListName from './apps/App6'\nimport UserComment from './apps/App7'\n\n\nfunction App() {\n  const apps = [\n    {name: 'App 1 - Name', cmp: <Name />},\n    {name: 'App 2 - NameDict', cmp: <NameDict />},\n    {name: 'App 3 - NameConditional', cmp: <NameConditional />},\n    {name: 'App 4 - ItIsTime', cmp: <ItIsTime />},\n    {name: 'App 5 - WelcomeName', cmp: <WelcomeName />},\n    {name: 'App 6 - WelcomeListName', cmp: <WelcomeListName />},\n    {name: 'App 7 - UserComment', cmp: <UserComment />},\n  ]\n\n  return (\n    <div>\n      <div\n        style={{width: \"10%\",\n                float: 'left',\n                textAlign: 'center' }}>\n        <a href='https://github.com/iuryadones/react-getting-started/'>\n          <img src={logoGithub} alt=\"GitHub\" width='80%' />\n        </a>\n      </div>\n      <div style={{width: '90%',\n                   float: 'right'}}>\n        <Card apps={apps}/>\n      </div>\n    </div>\n  )\n}\n\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n   <App />,\n   document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/github.aac90947.svg\";"],"sourceRoot":""}