{"version":3,"sources":["components/Card.js","apps/App1.js","apps/App2.js","apps/App3.js","App.js","serviceWorker.js","index.js"],"names":["Card","state","showMenu","app","bind","closeMenu","selectApp","event","preventDefault","this","setState","document","addEventListener","dropdownMenu","contains","target","removeEventListener","_id","id","component","props","apps","cmp","onClick","ref","element","map","index","key","name","React","Component","Name","user","firstName","lastName","NameDict","getGreenting","Object","keys","length","formatName","NameConditional","case_one","case_two","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uNAiFeA,E,YA7Eb,aAAe,IAAD,8BACZ,+CAEKC,MAAQ,CACXC,UAAU,EACVC,IAAK,gDAGP,EAAKD,SAAW,EAAKA,SAASE,KAAd,gBAChB,EAAKC,UAAY,EAAKA,UAAUD,KAAf,gBACjB,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBAVL,E,sEAaLG,GAAQ,IAAD,OACdA,EAAMC,iBAENC,KAAKC,SAAS,CAAER,UAAU,IAAQ,WAChCS,SAASC,iBAAiB,QAAS,EAAKP,gB,gCAIlCE,GAAQ,IAAD,OAEVE,KAAKI,aAAaC,SAASP,EAAMQ,SAEpCN,KAAKC,SAAS,CAAER,UAAU,IAAS,WACjCS,SAASK,oBAAoB,QAAS,EAAKX,gB,gCAMvCE,GACR,IAAMU,EAAMV,EAAMQ,OAAOG,GACnBC,EAAYV,KAAKW,MAAMC,KAAKJ,GAAKK,IACvCb,KAAKC,SAAS,CAAEP,IAAKgB,M,+BAGb,IAAD,OACP,OACE,6BACE,4BAAQI,QAASd,KAAKP,UAAtB,QAKEO,KAAKR,MAAMC,SAEP,yBACEsB,IAAK,SAACC,GACJ,EAAKZ,aAAeY,IAGrBhB,KAAKW,MAAMC,KAAKK,KACf,SAACvB,EAAKwB,GAAN,OACI,4BACEC,IAAKD,EACLT,GAAIS,EACJJ,QAAS,EAAKjB,WACbH,EAAI0B,UAOf,KAGN,6BACCpB,KAAKR,MAAME,S,GAvED2B,IAAMC,WCMVC,MANf,WAGE,OADiB,4BADJ,gBCEf,IAJoBC,EASdR,EACJ,uCAVkBQ,EAIP,CACXC,UAAW,OACXC,SAAU,WALED,UAAY,IAAMD,EAAKE,SASnC,KASaC,MAJf,WACE,OAAOX,GCXT,SAASY,EAAaJ,GACpB,OAAIK,OAAOC,KAAKN,GAAMO,OACb,mCANX,SAAoBP,GAClB,OAAOA,EAAKC,UAAY,IAAMD,EAAKE,SAKjBM,CAAWR,GAApB,KAEF,6CAuBMS,MAnBf,WACE,IACMC,EAAWN,EADA,IAGXO,EAAWP,EADJ,CAAC,UAAa,OAAQ,SAAY,WAE/C,OACE,6BACE,6BACGM,EACD,mEAEF,6BACGC,EACD,iFCVOC,MAXf,WACE,IAAMxB,EAAO,CACX,CAACQ,KAAM,eAAgBP,IAAK,kBAAC,EAAD,OAC5B,CAACO,KAAM,mBAAoBP,IAAK,kBAAC,EAAD,OAChC,CAACO,KAAM,0BAA2BP,IAAK,kBAAC,EAAD,QAEzC,OACE,kBAAC,EAAD,CAAMD,KAAMA,KCFIyB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACN,kBAAC,EAAD,MACAzC,SAAS0C,eAAe,SD0HrB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.ea5978d0.chunk.js","sourcesContent":["import React from 'react'\n\n\nclass Card extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      showMenu: false,\n      app: <div>Wait Click App</div>\n    };\n\n    this.showMenu = this.showMenu.bind(this);\n    this.closeMenu = this.closeMenu.bind(this);\n    this.selectApp = this.selectApp.bind(this);\n  }\n\n  showMenu(event) {\n    event.preventDefault();\n\n    this.setState({ showMenu: true }, () => {\n      document.addEventListener('click', this.closeMenu);\n    });\n  }\n\n  closeMenu(event) {\n\n    if (!this.dropdownMenu.contains(event.target)) {\n\n      this.setState({ showMenu: false }, () => {\n        document.removeEventListener('click', this.closeMenu);\n      });\n\n    }\n  }\n\n  selectApp(event) {\n    const _id = event.target.id\n    const component = this.props.apps[_id].cmp\n    this.setState({ app: component})\n  }\n\n  render() {\n    return (\n      <div>\n        <button onClick={this.showMenu}>\n          Apps\n        </button>\n\n        {\n          this.state.showMenu\n            ? (\n              <div\n                ref={(element) => {\n                  this.dropdownMenu = element;\n                }}\n              >\n                {this.props.apps.map(\n                  (app, index) => (\n                      <button\n                        key={index}\n                        id={index}\n                        onClick={this.selectApp}>\n                        {app.name}\n                      </button>\n                  )\n                )}\n              </div>\n            )\n            : (\n              null\n            )\n        }\n        <hr />\n        {this.state.app}\n      </div>\n    );\n  }\n}\n\n\nexport default Card\n","import React from 'react'\n\n\nfunction Name() {\n  const name = 'Iury Adones'\n  const element = (<h1>{name}</h1>)\n  return element\n}\n\nexport default Name\n","import React from 'react'\n\nfunction formatName(user) {\n  return user.firstName + ' ' + user.lastName;\n}\n\nconst user = {\n  firstName: 'Iury',\n  lastName: 'Adones'\n};\n\nconst element = (\n  <h1>\n    Hello, {formatName(user)}!\n  </h1>\n);\n\nfunction NameDict () {\n  return element\n}\n\nexport default NameDict\n\n\n// App 3\n// function getGreenting(user) {\n//   if (Object.keys(user).length) {\n//     return <h1>Hello, {formatName(user)}!</h1>;\n//   }\n//   return <h1>Hello, Stranger.</h1>;\n// }\n//\n// const userNull = {};\n//\n// element = getGreenting(userNull);\n//\n// ReactDOM.render(\n//   element,\n//   document.getElementById('root')\n// );\n\n\n// App 4\n// function tick() {\n//   const element = (\n//     <div>\n//       {getGreenting(user)}\n//       <h2>It is {new Date().toLocaleTimeString()}.</h2>\n//     </div>\n//   );\n//   ReactDOM.render(element, document.getElementById('root'));\n// }\n// setInterval(tick, 1000);\n\n// App 5\n// function Welcome(props) {\n//   return <h1>Hello, {props.name}</h1>;\n// }\n//\n// var element = <Welcome name=\"Sara\" />;\n// ReactDOM.render(element, document.getElementById('root'));\n\n\n// App 6\n// function Welcome(props) {\n//   return <h1>Hello, {props.name}</h1>;\n// }\n//\n// function App() {\n//   return (\n//     <div>\n//       <Welcome name=\"Sara\" />\n//       <Welcome name=\"Cahal\" />\n//       <Welcome name=\"Edite\" />\n//     </div>\n//   );\n// }\n//\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// );\n\n\n// App 7\n// function formatDate(date) {\n//   return date.toLocaleDateString()\n// }\n//\n// function Comment(props) {\n//   return (\n//     <div className=\"Comment\">\n//       <div className=\"UserInfo\">\n//         <img className=\"Avatar\"\n//           src={props.author.avatarUrl}\n//           alt={props.author.name}\n//         />\n//         <div className=\"UserInfo-name\">\n//           {props.author.name}\n//         </div>\n//       </div>\n//       <div className=\"Comment-text\">\n//         {props.text}\n//       </div>\n//       <div className=\"Comment-date\">\n//         {formatDate(props.date)}\n//       </div>\n//     </div>\n//   );\n// }\n//\n// const comment = {\n//   date: new Date(),\n//   text: 'Ola mundo, text2tag saindo!',\n//   author: {\n//     'avatarUrl': 'https://placekitten.com/g/64/64',\n//     'name': 'Kurier',\n//   },\n// }\n//\n//\n// function App() {\n//   return (\n//     <div>\n//       <Comment\n//         author={comment.author}\n//         text={comment.text}\n//         date={comment.date}\n//       />\n//     </div>\n//   )\n// }\n//\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// )\n\n// App 8\n// function formatDate(date) {\n//   return date.toLocaleDateString()\n// }\n//\n// function Avatar(props) {\n//   return (\n//     <img className=\"Avatar\"\n//       src={props.user.avatarUrl}\n//       alt={props.user.name}\n//     />\n//\n//   );\n// }\n//\n// function Comment(props) {\n//   return (\n//     <div className=\"Comment\">\n//       <div className=\"UserInfo\">\n//         <Avatar user={props.author}/>\n//         <div className=\"UserInfo-name\">\n//           {props.author.name}\n//         </div>\n//       </div>\n//       <div className=\"Comment-text\">\n//         {props.text}\n//       </div>\n//       <div className=\"Comment-date\">\n//         {formatDate(props.date)}\n//       </div>\n//     </div>\n//   );\n// }\n//\n// const comment = {\n//   date: new Date(),\n//   text: 'Ola mundo, text2tag saindo!',\n//   author: {\n//     'avatarUrl': 'https://placekitten.com/g/64/64',\n//     'name': 'Kurier',\n//   },\n// }\n//\n// function App() {\n//   return (\n//     <div>\n//       <Comment\n//         author={comment.author}\n//         text={comment.text}\n//         date={comment.date}\n//       />\n//     </div>\n//   )\n// }\n//\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// )\n\n// App 9\n// function formatDate(date) {\n//   return date.toLocaleDateString()\n// }\n//\n// function Avatar(props) {\n//   return (\n//     <img\n//       className=\"Avatar\"\n//       src={props.user.avatarUrl}\n//       alt={props.user.name}\n//     />\n//   );\n// }\n//\n// function UserInfo(props) {\n//   return (\n//     <div className=\"UserInfo\">\n//       <Avatar user={props.user} />\n//       <div className=\"UserInfo-name\">\n//         {props.user.name}\n//       </div>\n//     </div>\n//   );\n// }\n//\n// function Comment(props) {\n//   return (\n//     <div className=\"Comment\">\n//       <UserInfo user={props.author} />\n//       <div className=\"Comment-text\">\n//         {props.text}\n//       </div>\n//       <div className=\"Comment-date\">\n//         {formatDate(props.date)}\n//       </div>\n//     </div>\n//   );\n// }\n//\n// const comment = {\n//   date: new Date(),\n//   text: 'Ola mundo, text2tag saindo!',\n//   author: {\n//     'avatarUrl': 'https://placekitten.com/g/64/64',\n//     'name': 'Kurier',\n//   },\n// }\n//\n// function App() {\n//   return (\n//     <div>\n//       <Comment\n//         author={comment.author}\n//         text={comment.text}\n//         date={comment.date}\n//       />\n//     </div>\n//   )\n// }\n//\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// )\n\n// App 10\n// function Clock(props) {\n//   return (\n//     <div>\n//       <h1>Hello, world!</h1>\n//       <h2>It is {props.date.toLocaleTimeString()}.</h2>\n//     </div>\n//   );\n// }\n//\n// function tick() {\n//   ReactDOM.render(\n//     <Clock date={new Date()} />,\n//     document.getElementById('root')\n//   );\n// }\n//\n// setInterval(tick, 1000);\n\n// App 11\n// class Clock extends React.Component {\n//   render() {\n//     return (\n//       <div>\n//         <h1>Hello, world!</h1>\n//         <h2>It is {this.props.date.toLocaleTimeString()}.</h2>\n//       </div>\n//     );\n//   }\n// }\n//\n// function tick() {\n//   ReactDOM.render(\n//     <Clock date={new Date()} />,\n//     document.getElementById('root')\n//   );\n// }\n//\n// setInterval(tick, 1000);\n\n\n// App 12\n// class Clock extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       date: new Date()\n//     }\n//   }\n//\n//   componentDidMount() {\n//     this.timerID = setInterval(\n//       () => this.tick(),\n//       1000\n//     )\n//   }\n//\n//   componentWillUnmount() {\n//     clearInterval(this.timerID);\n//   }\n//\n//   tick() {\n//     this.setState({\n//       date: new Date()\n//     })\n//   }\n//\n//   render() {\n//     return (\n//       <div>\n//         <h1>Hello, world!</h1>\n//         <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\n//       </div>\n//     )\n//   }\n// }\n//\n// function App() {\n//   return (\n//     <div>\n//       <Clock />\n//       <Clock />\n//     </div>\n//   )\n// }\n//\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// );\n\n// App 13\n// function activateLasers() {\n//   console.log('Activate Lasers')\n// }\n//\n// function App() {\n//   return (\n//     <div>\n//       <button onClick={activateLasers}>\n//         Ativar lasers\n//       </button>\n//     </div>\n//   )\n// }\n//\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// );\n\n\n// App 14\n// function ActionLink() {\n//   function handleClick(e){\n//     e.preventDefault()\n//     console.log('O link foi clicado.')\n//   }\n//\n//   return (\n//     <a href=\"#\" onClick={handleClick}>\n//       Clique Aqui\n//     </a>\n//   )\n// }\n//\n// function App() {\n//   return (\n//     <div>\n//     <ActionLink />\n//     </div>\n//   )\n// }\n//\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// );\n\n\n// App 15\n// class Toggle extends React.Component {\n//   constructor(props){\n//     super(props)\n//     this.state = {\n//       isToggleOn: true\n//     }\n//     // Aqui utilizamos o `bind`\n//     // para que o `this` funcione dentro da nossa callback\n//     this.handleClick = this.handleClick.bind(this)\n//   }\n//\n//   handleClick() {\n//     this.setState(state => ({\n//       isToggleOn: !state.isToggleOn\n//     }))\n//   }\n//\n//   render() {\n//     return (\n//       <button onClick={this.handleClick}>\n//         {this.state.isToggleOn ? 'ON': 'OFF'}\n//       </button>\n//     )\n//   }\n// }\n//\n// function App() {\n//   return (\n//     <div>\n//     <Toggle />\n//     </div>\n//   )\n// }\n//\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// );\n\n// App 16\n// function UserGreeting(props) {\n//   return <h1>Welcome Back!</h1>\n// }\n//\n// function GuestGreenting(props) {\n//   return <h1>Please sign up.</h1>\n// }\n//\n// function Greeting(props) {\n//   const isLoggedIn = props.isLoggedIn;\n//   if (isLoggedIn){\n//     return <UserGreeting />\n//   }\n//   return <GuestGreenting />\n// }\n//\n// function LoginButton(props) {\n//   return (\n//     <button onClick={props.onClick}>\n//       Login\n//     </button>\n//   )\n// }\n//\n// function LogoutButton(props) {\n//   return (\n//     <button onClick={props.onClick}>\n//       Logout\n//     </button>\n//   )\n// }\n//\n// class LoginControl extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.handleLoginClick = this.handleLoginClick.bind(this);\n//     this.handleLogoutClick = this.handleLogoutClick.bind(this);\n//     this.state = {isLoggedIn: false};\n//   }\n//\n//   handleLoginClick() {\n//     this.setState({isLoggedIn: true});\n//   }\n//\n//   handleLogoutClick() {\n//     this.setState({isLoggedIn: false});\n//   }\n//\n//   render() {\n//     const isLoggedIn = this.state.isLoggedIn;\n//     let button;\n//\n//     if (isLoggedIn) {\n//       button = <LogoutButton onClick={this.handleLogoutClick} />;\n//     } else {\n//       button = <LoginButton onClick={this.handleLoginClick} />;\n//     }\n//\n//     return (\n//       <div>\n//         <Greeting isLoggedIn={isLoggedIn} />\n//         {button}\n//       </div>\n//     );\n//   }\n// }\n//\n// function App() {\n//   return (\n//     <div>\n//       <LoginControl />\n//     </div>\n//   )\n// }\n//\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// );\n\n\n// App 17\n// function Mailbox(props) {\n//   const unreadMessages = props.unreadMessages;\n//   return (\n//     <div>\n//       <h1>Hello!</h1>\n//       {unreadMessages.length > 0 &&\n//         <h2>\n//           You have {unreadMessages.length} unread messages.\n//         </h2>\n//       }\n//     </div>\n//   )\n// }\n//\n// const messages = ['Msg 1', 'Msg 2']\n//\n// function App() {\n//   return (\n//     <div>\n//       <Mailbox unreadMessages={messages} />\n//     </div>\n//   )\n// }\n//\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// );\n\n\n// App 18\n// function UserGreeting(props) {\n//   return <h1>Welcome Back!</h1>\n// }\n//\n// function GuestGreenting(props) {\n//   return <h1>Please sign up.</h1>\n// }\n//\n// function Greeting(props) {\n//   const isLoggedIn = props.isLoggedIn;\n//   if (isLoggedIn){\n//     return <UserGreeting />\n//   }\n//   return <GuestGreenting />\n// }\n//\n// function LoginButton(props) {\n//   return (\n//     <button onClick={props.onClick}>\n//       Login\n//     </button>\n//   )\n// }\n//\n// function LogoutButton(props) {\n//   return (\n//     <button onClick={props.onClick}>\n//       Logout\n//     </button>\n//   )\n// }\n//\n// class LoginControl extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.handleLoginClick = this.handleLoginClick.bind(this);\n//     this.handleLogoutClick = this.handleLogoutClick.bind(this);\n//     this.state = {isLoggedIn: false};\n//   }\n//\n//   handleLoginClick() {\n//     this.setState({isLoggedIn: true});\n//   }\n//\n//   handleLogoutClick() {\n//     this.setState({isLoggedIn: false});\n//   }\n//\n//   render() {\n//     const isLoggedIn = this.state.isLoggedIn;\n//     let button;\n//\n//     button = (\n//       isLoggedIn ? (\n//          <LogoutButton onClick={this.handleLogoutClick} />\n//       ) : (\n//         <LoginButton onClick={this.handleLoginClick} />\n//       )\n//     )\n//\n//     return (\n//       <div>\n//         <Greeting isLoggedIn={isLoggedIn} />\n//         {button}\n//         <p>\n//           the user is <b>{isLoggedIn ? 'currently' : 'not'}</b> logged in.\n//         </p>\n//       </div>\n//     );\n//   }\n// }\n//\n// function App() {\n//   return (\n//     <div>\n//       <LoginControl />\n//     </div>\n//   )\n// }\n//\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// );\n\n// App 19\n// function WarningBanner(props) {\n//   if (!props.warn) {\n//     return null;\n//   }\n//\n//   return (\n//     <div className=\"warning\">\n//       Warning!\n//     </div>\n//   );\n// }\n//\n// class Page extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {showWarning: true};\n//     this.handleToggleClick = this.handleToggleClick.bind(this);\n//   }\n//\n//   handleToggleClick() {\n//     this.setState(state => ({\n//       showWarning: !state.showWarning\n//     }));\n//   }\n//\n//   render() {\n//     return (\n//       <div>\n//         <WarningBanner warn={this.state.showWarning} />\n//         <button onClick={this.handleToggleClick}>\n//           {this.state.showWarning ? 'Hide' : 'Show'}\n//         </button>\n//       </div>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(\n//   <Page />,\n//   document.getElementById('root')\n// );\n\n// App 20\n// function NumbersMap(props) {\n//   const doubled = props.numbers.map((number) => number * 2)\n//   console.log(doubled)\n//   return doubled.toString()\n// }\n//\n// function NumbersListMap(props) {\n//   const doubled = props.numbers.map(\n//     (number) =>\n//       <li key={number.toString()}>\n//         {number} * 2 = {number * 2}\n//       </li>\n//   )\n//   return (\n//     <ul>\n//       {doubled}\n//     </ul>\n//   )\n// }\n//\n// function NumbersListMap(props) {\n//   const doubled = props.numbers.map(\n//     (number, index) =>\n//       <li key={index}>\n//         {number} * 2 = {number * 2}\n//       </li>\n//   )\n//   return (\n//     <ul>\n//       {doubled}\n//     </ul>\n//   )\n// }\n//\n// const numbers = [1, 2, 3, 4, 5]\n//\n// function App(){\n//   return (\n//     <div>\n//       <NumbersMap numbers={numbers} />\n//       <NumbersListMap numbers={numbers} />\n//     </div>\n//   )\n// }\n//\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// );\n\n// App 21\n// function Blog(props) {\n//   const sidebar = (\n//     <ul>\n//       {props.posts.map((post) =>\n//         <li key={post.id}>\n//           {post.title}\n//         </li>\n//       )}\n//     </ul>\n//   );\n//   const content = props.posts.map((post) =>\n//     <div key={post.id}>\n//       <h3>{post.title}</h3>\n//       <p>{post.content}</p>\n//     </div>\n//   );\n//   return (\n//     <div>\n//       {sidebar}\n//       <hr />\n//       {content}\n//     </div>\n//   );\n// }\n//\n// const posts = [\n//   {id: 1, title: 'Hello World', content: 'Welcome to learning React!'},\n//   {id: 2, title: 'Installation', content: 'You can install React from npm.'}\n// ];\n// ReactDOM.render(\n//   <Blog posts={posts} />,\n//   document.getElementById('root')\n// );\n\n\n// App 22\n// function Blog(props) {\n//   const sidebar = (\n//     <ul>\n//       {props.posts.map((post) =>\n//         <li key={post.id}>\n//           {post.title}\n//         </li>\n//       )}\n//     </ul>\n//   );\n//   const content = props.posts.map((post) =>\n//     <Post\n//       key={post.id}\n//       id={post.id}\n//       title={post.title}\n//       content={post.content}\n//     />\n//   );\n//   return (\n//     <div>\n//       {sidebar}\n//       <hr />\n//       {content}\n//     </div>\n//   );\n// }\n//\n// function Post(props) {\n//   console.log(props)\n//   return (\n//     <div key={props.id}>\n//       <h3>{props.title}</h3>\n//       <p>{props.content}</p>\n//     </div>\n//   )\n// }\n//\n// const posts = [\n//   {id: 1, title: 'Hello World', content: 'Welcome to learning React!'},\n//   {id: 2, title: 'Installation', content: 'You can install React from npm.'}\n// ];\n// ReactDOM.render(\n//   <Blog posts={posts} />,\n//   document.getElementById('root')\n// );\n\n// App 23\n// class NameForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {value: ''}\n//\n//     this.handleChange = this.handleChange.bind(this)\n//     this.handleSubmit = this.handleSubmit.bind(this)\n//   }\n//\n//   handleChange(event) {\n//     this.setState({value: event.target.value});\n//   }\n//\n//   handleSubmit(event) {\n//     alert('Um nome foi enviado: ' + this.state.value);\n//     event.preventDefault()\n//   }\n//\n//   render() {\n//     return (\n//       <div>\n//         <form onSubmit={this.handleSubmit}>\n//           <label>\n//             Nome:\n//           </label>\n//           <p>\n//             <input\n//               type=\"text\"\n//               value={this.state.value}\n//               onChange={this.handleChange}\n//             />\n//           </p>\n//           <input type=\"submit\" value=\"Enviar\" />\n//         </form>\n//       </div>\n//     )\n//   }\n// }\n//\n// class EssayForm extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.state = {\n//       value: 'Por favor, escreva uma dissertação sobre o seu elemento DOM favorito.'\n//     };\n//\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n//\n//   handleChange(event) {\n//     this.setState({value: event.target.value});\n//   }\n//\n//   handleSubmit(event) {\n//     alert('Uma dissertação foi enviada: ' + this.state.value);\n//     event.preventDefault();\n//   }\n//\n//   render() {\n//     return (\n//       <form onSubmit={this.handleSubmit}>\n//         <label>\n//           Dissertação:\n//           <textarea value={this.state.value} onChange={this.handleChange} />\n//         </label>\n//         <input type=\"submit\" value=\"Enviar\" />\n//       </form>\n//     )\n//   }\n// }\n//\n// class FlavorForm extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {value: 'coco'};\n//\n//     this.handleChange = this.handleChange.bind(this);\n//     this.handleSubmit = this.handleSubmit.bind(this);\n//   }\n//\n//   handleChange(event) {\n//     this.setState({value: event.target.value});\n//   }\n//\n//   handleSubmit(event) {\n//     alert('Seu sabor favorito é: ' + this.state.value);\n//     event.preventDefault();\n//   }\n//\n//   render() {\n//     return (\n//       <div>\n//         <form onSubmit={this.handleSubmit}>\n//           <label>\n//             Escolha seu sabor favorito:\n//             <select value={this.state.value} onChange={this.handleChange}>\n//               <option value=\"laranja\">Laranja</option>\n//               <option value=\"limao\">Limão</option>\n//               <option value=\"coco\">Coco</option>\n//               <option value=\"manga\">Manga</option>\n//             </select>\n//           </label>\n//           <input type=\"submit\" value=\"Enviar\" />\n//         </form>\n//       </div>\n//     )\n//   }\n// }\n//\n// class Reservation extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       isGoing: true,\n//       numberOfGuests: 2\n//     };\n//\n//     this.handleInputChange = this.handleInputChange.bind(this);\n//   }\n//\n//   handleInputChange(event) {\n//     const target = event.target;\n//     const value = target.type === 'checkbox' ? target.checked : target.value;\n//     const name = target.name;\n//\n//     this.setState({\n//       [name]: value\n//     });\n//   }\n//\n//   render() {\n//     return (\n//       <form>\n//         <label>\n//           Estão indo:\n//           <input\n//             name=\"isGoing\"\n//             type=\"checkbox\"\n//             checked={this.state.isGoing}\n//             onChange={this.handleInputChange} />\n//         </label>\n//         <br />\n//         <label>\n//           Número de convidados:\n//           <input\n//             name=\"numberOfGuests\"\n//             type=\"number\"\n//             value={this.state.numberOfGuests}\n//             onChange={this.handleInputChange} />\n//         </label>\n//       </form>\n//     )\n//   }\n// }\n//\n//\n// function App() {\n//   return (\n//     // <NameForm />\n//     // <EssayForm />\n//     // <FlavorForm />\n//     <Reservation />\n//   )\n// }\n//\n// ReactDOM.render(\n//   <App />,\n//   document.getElementById('root')\n// );\n\n\n// App 24\n// ReactDOM.render(\n//   <input value=\"hi\" />,\n//   document.getElementById('root')\n// );\n\n// App 25\n// ReactDOM.render(\n//   <input value=\"hi\" />,\n//   document.getElementById('root')\n// )\n//\n// setTimeout(\n//   function() {\n//     ReactDOM.render(<input value={null} />,\n//     document.getElementById('root'))\n//   },\n//   1000\n// )\n\n\n// App 26\n// function BoilingVerdict(props) {\n//   if (props.celsius >= 100) {\n//     return <p>A água ferveria.</p>;\n//   }\n//   return <p>A água não ferveria.</p>;\n// }\n//\n// class Calculator extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.handleChange = this.handleChange.bind(this);\n//     this.state = {temperature: ''};\n//   }\n//\n//   handleChange(e) {\n//     this.setState({temperature: e.target.value});\n//   }\n//\n//   render() {\n//     const temperature = this.state.temperature;\n//     return (\n//       <fieldset>\n//         <legend>Informe a temperatura em Celsius:</legend>\n//         <input\n//           value={temperature}\n//           onChange={this.handleChange} />\n//\n//         <BoilingVerdict\n//           celsius={parseFloat(temperature)} />\n//\n//       </fieldset>\n//     );\n//   }\n// }\n//\n// const scaleNames = {\n//   c: 'Celsius',\n//   f: 'Fahrenheit'\n// };\n//\n// class TemperatureInput extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.handleChange = this.handleChange.bind(this);\n//     this.state = {temperature: ''};\n//   }\n//\n//   handleChange(e) {\n//     // this.setState({temperature: e.target.value});\n//     this.props.onTemperatureChange(e.target.value);\n//   }\n//\n//   render() {\n//     // Antes: const temperature = this.state.temperature;\n//     const temperature = this.props.temperature;\n//     const scale = this.props.scale;\n//     return (\n//       <fieldset>\n//         <legend>Informe a temperatura em {scaleNames[scale]}:</legend>\n//         <input value={temperature}\n//                onChange={this.handleChange} />\n//       </fieldset>\n//     );\n//   }\n// }\n//\n// function toCelsius(fahrenheit) {\n//   return (fahrenheit - 32) * 5 / 9;\n// }\n//\n// function toFahrenheit(celsius) {\n//   return (celsius * 9 / 5) + 32;\n// }\n//\n// function tryConvert(temperature, convert) {\n//   const input = parseFloat(temperature);\n//   if (Number.isNaN(input)) {\n//     return '';\n//   }\n//   const output = convert(input);\n//   const rounded = Math.round(output * 1000) / 1000;\n//   return rounded.toString();\n// }\n//\n// class CalculatorTemperature extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n//     this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n//     this.state = {temperature: '', scale: ''};\n//   }\n//\n//   handleCelsiusChange(temperature) {\n//     this.setState({\n//       scale: 'c', temperature\n//     })\n//   }\n//\n//   handleFahrenheitChange(temperature) {\n//     this.setState({\n//       scale: 'f', temperature\n//     })\n//   }\n//\n//   render() {\n//     const scale = this.state.scale;\n//     const temperature = this.state.temperature;\n//     const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n//     const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n//     return (\n//       <div>\n//         <TemperatureInput\n//           scale=\"c\"\n//           temperature={celsius}\n//           onTemperatureChange={this.handleCelsiusChange} />\n//         <TemperatureInput\n//           scale=\"f\"\n//           temperature={fahrenheit}\n//           onTemperatureChange={this.handleFahrenheitChange} />\n//         <BoilingVerdict\n//           celsius={parseFloat(temperature)} />\n//         <Calculator />\n//       </div>\n//     );\n//   }\n// }\n//\n// ReactDOM.render(\n//   <CalculatorTemperature />,\n//   document.getElementById('root')\n// )\n//\n\n\n// App 27\n// function FancyBorder(props) {\n//   return (\n//     <div className={'FancyBorder FancyBorder-' + props.color}>\n//       {props.children}\n//     </div>\n//   );\n// }\n//\n// function Dialog(props) {\n//   return (\n//     <FancyBorder color=\"blue\">\n//       <h1 className=\"Dialog-title\">\n//         {props.title}\n//       </h1>\n//       <p className=\"Dialog-message\">\n//         {props.message}\n//       </p>\n//     </FancyBorder>\n//   );\n// }\n//\n// function WelcomeDialog() {\n//   return (\n//     <Dialog\n//       title=\"Bem-vindo\"\n//       message=\"Obrigado por visitar a nossa espaçonave!\" />\n//\n//   );\n// }\n//\n// ReactDOM.render(\n//   <WelcomeDialog />,\n//   document.getElementById('root')\n// );\n\n// App 28\n// function FancyBorder(props) {\n//   return (\n//     <div className={'FancyBorder FancyBorder-' + props.color}>\n//       {props.children}\n//     </div>\n//   );\n// }\n//\n// function Dialog(props) {\n//   return (\n//     <FancyBorder color=\"blue\">\n//       <h1 className=\"Dialog-title\">\n//         {props.title}\n//       </h1>\n//       <p className=\"Dialog-message\">\n//         {props.message}\n//       </p>\n//       {props.children}\n//     </FancyBorder>\n//   );\n// }\n//\n// class SignUpDialog extends React.Component {\n//   constructor(props) {\n//     super(props)\n//     this.handleChange = this.handleChange.bind(this)\n//     this.handleSignUp = this.handleSignUp.bind(this)\n//     this.state = {login: ''}\n//   }\n//\n//   render() {\n//     return (\n//       <Dialog title=\"Programa de Exploração de Marte\"\n//               message=\"Como gostaria de ser chamado?\">\n//         <input value={this.state.login}\n//                onChange={this.handleChange} />\n//\n//         <button onClick={this.handleSignUp}>\n//           Cadastre-se!\n//         </button>\n//       </Dialog>\n//     )\n//   }\n//\n//   handleChange(e) {\n//     this.setState({login: e.target.value})\n//   }\n//\n//   handleSignUp() {\n//     alert(`Bem-vindo a bordo, ${this.state.login}!`)\n//   }\n// }\n//\n// ReactDOM.render(\n//   <SignUpDialog />,\n//   document.getElementById('root')\n// );\n","import React from 'react'\n\n\nfunction formatName(user) {\n  return user.firstName + ' ' + user.lastName;\n}\n\nfunction getGreenting(user) {\n  if (Object.keys(user).length) {\n    return <h1>Hi, {formatName(user)}!</h1>;\n  }\n  return <h1>Hi, Stranger.</h1>;\n}\n\n\nfunction NameConditional() {\n  const userNull = {};\n  const case_one = getGreenting(userNull);\n  const user = {'firstName': 'Iury', 'lastName': 'Adones'};\n  const case_two = getGreenting(user);\n  return (\n    <div>\n      <div>\n        {case_one}\n        <p>Case user null -> response Stranger</p>\n      </div>\n      <div>\n        {case_two}\n        <p>Case user with user.firstName and user.lastName</p>\n      </div>\n    </div>\n  )\n}\n\nexport default NameConditional\n","import React from 'react'\nimport Card from './components/Card'\nimport Name from './apps/App1'\nimport NameDict from './apps/App2'\nimport NameConditional from './apps/App3'\n\n\nfunction App() {\n  const apps = [\n    {name: 'App 1 - Name', cmp: <Name />},\n    {name: 'App 2 - NameDict', cmp: <NameDict />},\n    {name: 'App 3 - NameConditional', cmp: <NameConditional />},\n  ]\n  return (\n    <Card apps={apps}/>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n   <App />,\n   document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}